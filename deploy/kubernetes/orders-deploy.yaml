apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-api-deployment
  labels:
    app: orders-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orders-api
  template:
    metadata:
      labels:
        app: orders-api
    spec:
      containers:
      - name: orders-api
        image: orders-api:v1
        imagePullPolicy: Never
        ports:
        - containerPort: 3000
        env:
        - name: DB_USER
          value: "admin"
        - name: DB_HOST
          value: "postgres-service"
        - name: DB_DATABASE
          value: "cafeboreal"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        livenessProbe:
          httpGet: { path: /api/orders/healthz, port: 3000 }
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet: { path: /api/orders/healthz, port: 3000 }
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: orders-api-service
spec:
  selector:
    app: orders-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
